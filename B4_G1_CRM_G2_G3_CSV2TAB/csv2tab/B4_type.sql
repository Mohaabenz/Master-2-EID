/********************************************************************************************************************/
/********************************************************************************************************************/


/************************************************/
/*						*/
/*	CREATION DE LA TABLE CONTENANT		*/
/*	     LES TYPAGES PRIMAIRES		*/
/*						*/
/************************************************/


DROP TABLE SYNTAXICTYPE;

CREATE TABLE SYNTAXICTYPE
(
	SYNTAXIC 				VARCHAR2(20),
	REGULAREXPR 				VARCHAR2(200),
	CONSTRAINT PK_SYNTAXICTYPE		PRIMARY KEY(SYNTAXIC),
	CONSTRAINT CK_SYNTAXICTYPE_SYNTAXIC	CHECK(SYNTAXIC = UPPER(SYNTAXIC))
);
INSERT INTO SYNTAXICTYPE VALUES ('NUMBER', '^[[:digit:].]+$');
INSERT INTO SYNTAXICTYPE VALUES ('DATE', '([0-2][0-9]|3[0-1])-(0[0-9]|1[0-2])-[0-9]{4}');

/********************************************************************************************************************/
/********************************************************************************************************************/

/************************************************/
/*						*/
/*	  CREATION DE LA TABLE CONTENANT	*/
/*	   LES (SUB)CATEGORIES PRIMAIRES	*/
/*	       INSERT A COMPLETER...		*/
/*						*/
/************************************************/


DROP TABLE CATEGORYTYPE;
CREATE TABLE CATEGORYTYPE
(
	CATEGORY				VARCHAR2(30), 
	SUBCATEGORY				VARCHAR2(30), 
	REGULAREXPR 				VARCHAR2(500),
	CONSTRAINT PK_CATEGORYTYPE		PRIMARY KEY(CATEGORY,SUBCATEGORY),
	CONSTRAINT CK_CATEGORYTYPE_CATEGORY	CHECK(CATEGORY = UPPER(CATEGORY)),
	CONSTRAINT CK_CATEGORYTYPE_SUBCATEGORY	CHECK(SUBCATEGORY = UPPER(SUBCATEGORY))
);



INSERT INTO CATEGORYTYPE VALUES 
('DATEFR','DATEALPHA', '(JANVIER|FEVRIER|FÉVRIER|MARS|AVRIL|-MAI-|JUIN|JUILLET|AOUT|AOÛT|SEPTEMBRE|OCTOBRE|NOVEMBRE|DECEMBRE|DÉCEMBRE|décembre|JANV|FEV|FÉV|-DÉC-|-déc-|-DEC-|AVR|-SEPT-|OCT|NOV)');
INSERT INTO CATEGORYTYPE VALUES 
('DATEAM','DATEALPHA', '(JANUARY|FEBRUARY|MARCH|APRIL|MAY|JUNE|JULY|AUGUST|SEPTEMBER|OCTOBER|NOVEMBER|DECEMBER|JAN|FEB|APR)');
INSERT INTO CATEGORYTYPE VALUES 
('DATEFR','DATENUM', '^(([0-2][0-9]|3[0-1])(-|/)(0[0-9]|1[0-2])(-|/)[0-9]{4})$');
INSERT INTO CATEGORYTYPE VALUES
('DATEAM','DATENUM', '^((0[0-9]|1[0-2])/([0-2][0-9]|3[0-1])/[0-9]{4})$');
INSERT INTO CATEGORYTYPE VALUES
('COORDONNEE','COORDONNEE','^((-)?[0-9]*\.[0-9]*),\s((-)?[0-9]*\.[0-9]*)$');
INSERT INTO CATEGORYTYPE VALUES 
('ALPHABETIQUE','ALPHABETIQUE', '^[[:alpha:]]|[é]+$');
INSERT INTO CATEGORYTYPE VALUES
('PAYS','PAYS-US', '^(FRANCE|ITALY|UNITED-KINGDOM|ARGENTINA|TUNISIA|GERMANY|BELGIUM|ALGERIA|QATAR|CHINA|BRAZIL|SPAIN|JAPAN)+$');
INSERT INTO CATEGORYTYPE VALUES 
('PAYS','PAYS-FR', '^(FRANCE|ITALIE|ROYAUME-UNI|ARGENTINE|TUNISIE|ALLEMAGNE|BELGIQUE|ALGÉRIE|QATAR|CHINE|BRÉSIL|ESPAGNE|JAPON)+$');
INSERT INTO CATEGORYTYPE VALUES 
('CONTINENT','CONTINENTFR', '(EUROPE|ASIE|AMÉRIQUE|AFRIQUE|Amérique)');
INSERT INTO CATEGORYTYPE VALUES 
('CONTINENT','CONTINENTUS', '(EUROPE|ASIA|AMERICA|AFRICA)');
INSERT INTO CATEGORYTYPE VALUES 
('DATEFR','DATEALPHAJ', '(LUNDI|MARDI|MERCREDI|JEUDI|VENDREDI|SAMEDI|DIMANCHE)');
INSERT INTO CATEGORYTYPE VALUES 
('DATEAM','DATEALPHAJ', '(MONDAY|TUESDAY|WEDNESDAY|THURSDAY|FRIDAY|SATURDAY|SUNDAY)');
INSERT INTO CATEGORYTYPE VALUES 
('MAIL','MAIL','^[A-Za-z]+[A-Za-z0-9.]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$');
INSERT INTO CATEGORYTYPE VALUES 
('NUMERIQUE','NEGATIF', '^-([[:digit:]\.[:digit:]])+$|^-([[:digit:],[:digit:]])+$');
INSERT INTO CATEGORYTYPE VALUES 
('NUMERIQUE','DOUBLE', '^([[:digit:]\.[:digit:]])+$|^([[:digit:],[:digit:]])+$');
INSERT INTO CATEGORYTYPE VALUES 
('NUMERIQUE','ENTIER', '^[[:digit:]]+$');
INSERT INTO CATEGORYTYPE VALUES 
('BLOODGROUP','POSITIF', '^(A\+|B\+|AB\+|O\+)$');
INSERT INTO CATEGORYTYPE VALUES 
('BLOODGROUP','NEGATIF', '^(A-|B-|AB-|O-)$');
INSERT INTO CATEGORYTYPE VALUES 
('TEMPERATURE','TEMPERATUREC', '(°C)+$|(CELCIUS)+$');
INSERT INTO CATEGORYTYPE VALUES 
('TEMPERATURE','TEMPERATUREF', '(°F)+$|(FAHRENHEIT)+$');
INSERT INTO CATEGORYTYPE VALUES 
('SEXE','FEMALE', 'FEMME|FEMELLE|^(F)+$|WOMAN|WIFE|FEMALE+$');
INSERT INTO CATEGORYTYPE VALUES 
('SEXE','MALE', 'HOMME|MALE|^(M)+$|^(H)+$|^(MAN)+$');
INSERT INTO CATEGORYTYPE VALUES 
('CIVIL','MADAME', '^(MME)+$|^(MLLE)+$');
INSERT INTO CATEGORYTYPE VALUES 
('CIVIL','MONSIEUR', '^(M.)+$');
INSERT INTO CATEGORYTYPE VALUES 
('MESURE','CENTIMETRES', '^([0-9]+((,\d+)?\s|(\.\d+)?\s)+(CM|CENTIMETRES))$');
INSERT INTO CATEGORYTYPE VALUES 
('MESURE','METRES', '^([0-9]+((,\d+)?\s|(\.\d+)?\s)+(M|METRES))$');
INSERT INTO CATEGORYTYPE VALUES 
('MESURE','KILOMETRES', '^([0-9]+((,\d+)?\s|(\.\d+)?\s)+(KM|KILOMETRES))$');
INSERT INTO CATEGORYTYPE VALUES 
('POIDS','KILOGRAMMES', '^([0-9]+((,\d+)?\s|(\.\d+)?\s)+(KG|KILOGRAMME|KILOGRAMMES))$');
INSERT INTO CATEGORYTYPE VALUES 
('POIDS', 'GRAMMES', '^([0-9]+((,\d+)?\s|(\.\d+)?\s)+(G|GRAMMES))$');
INSERT INTO CATEGORYTYPE VALUES 
('MONNAIE','DOLLAR', '(\$[0-9])+$');
INSERT INTO CATEGORYTYPE VALUES 
('MONNAIE','EUROS', '(\€)+$');
INSERT INTO CATEGORYTYPE VALUES 
('MONNAIE','LIVRE', '(\£)+$');
--INSERT INTO CATEGORYTYPE VALUES 
--('BIZARRE','INCONNU', '^((\*)*|(#)*)+$');
INSERT INTO CATEGORYTYPE VALUES 
('ID', 'IDINTIFER','^(ID)([[:digit:]]|[[:alpha:]])*$');
INSERT INTO CATEGORYTYPE VALUES
('CODEPOSTAL','CODEPOSTAL-FR','^([0-9]{5})$');
INSERT INTO CATEGORYTYPE VALUES
('TEL','TELFR-I','^(([\+]|[0]{2})([3]{2}))(\s)?[1-9](\s)?((([0-9]{2})(\s)?){3})([0-9]{2})$');
INSERT INTO CATEGORYTYPE VALUES
('TEL','TELFR','^[0][1-9][0-9]{8}$');
INSERT INTO CATEGORYTYPE VALUES
('TEL','TELBE-I', '^(([\+]|[0]{2})[3][2])[4]([5-9]{1})([0-9]{7})$');
INSERT INTO CATEGORYTYPE VALUES
('TEL','TELBE', '^[0][4]([5-9]{1})([0-9]{7})$');
INSERT INTO CATEGORYTYPE VALUES
('TEL','TELTN-I', '^(([\+]|[0]{2})[2][1][6])[1-9]([0-9]{7})$');
INSERT INTO CATEGORYTYPE VALUES
('TEL','TELTN', '^[0][1-9]([0-9]{7})$');







/**********************************************************************************************************/

/************************************************/
/*						*/
/*	  FONCTION VERIFIANT LES TYPES		*/
/*	         DES ATTRIBUTS			*/
/*						*/
/************************************************/

CREATE OR REPLACE FUNCTION VerifSyntax(p_variable IN varchar2)
RETURN	VARCHAR2
IS
	CURSOR S1 IS SELECT * FROM SYNTAXICTYPE;
	RESULT 		VARCHAR2(50);
	REGULAR		VARCHAR2(250);
	SYNTH		VARCHAR2(50) := 'STRING';
	BEGIN
		FOR RES IN S1
		LOOP
			SELECT REGULAREXPR INTO REGULAR FROM SYNTAXICTYPE WHERE SYNTAXIC=RES.SYNTAXIC ;		
			SELECT CASE WHEN (SELECT COUNT(*) FROM DUAL 
			WHERE REGEXP_LIKE (UPPER(P_VARIABLE) ,REGULAR ))>0 THEN 'TRUE' ELSE 'FALSE' END INTO RESULT FROM DUAL ;
			IF (RESULT = 'TRUE')
			THEN
				SYNTH := RES.SYNTAXIC;
			END IF;
				
		END LOOP;
		RETURN(SYNTH);
	END;
/

/************************************************/
/*						*/
/*     FONCTION VERIFIANT LES (SUB)CATEGORIES	*/
/*	           DES ATTRIBUTS		*/
/*						*/
/************************************************/

CREATE OR REPLACE FUNCTION VerifCategory(p_variable IN varchar2,Etape IN NUMBER)
RETURN	VARCHAR2
IS
	CURSOR C1 IS SELECT * FROM CATEGORYTYPE;
	RESULT 		VARCHAR2(50);
	REGULAR		VARCHAR2(500);
	CAT		VARCHAR2(50) := 'UNKNOWN';
	BEGIN
		FOR RES IN C1
		LOOP
			SELECT REGULAREXPR INTO REGULAR FROM CATEGORYTYPE WHERE CATEGORY=RES.CATEGORY AND SUBCATEGORY=RES.SUBCATEGORY ;		
			SELECT CASE WHEN (SELECT COUNT(*) FROM DUAL 
			WHERE REGEXP_LIKE (UPPER(P_VARIABLE) ,REGULAR ))>0 THEN 'TRUE' ELSE 'FALSE' END INTO RESULT FROM DUAL ;
			IF (RESULT = 'TRUE')
			THEN
				IF ETAPE = 1 THEN
					CAT := RES.CATEGORY;
				END IF;
				IF ETAPE = 2 THEN
					CAT := RES.SUBCATEGORY ;
				END IF;
			END IF;
			
				
		END LOOP;		
		RETURN(CAT);		
	END;
/
